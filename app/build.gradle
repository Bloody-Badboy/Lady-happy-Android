apply plugin: 'com.android.application'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'org.jetbrains.kotlin.android.extensions'
apply plugin: 'io.fabric'
apply from: 'keys.gradle'

def versionProp = loadProperties('version.properties')
def version = versionProp['VERSION'] as int
def sub_version = versionProp['SUB_VERSION'] as int
def build_version = versionProp['BUILD_VERSION'] as int
def verCode = version * 100000 + sub_version * 1000 + build_version
def verName = "$version.$sub_version.$build_version"

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.3"

    defaultConfig {
        applicationId "com.egoriku.ladyhappy"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode verCode
        versionName verName
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file(System.getenv("KEYSTORE"))
            storePassword System.getenv('KEY_STORE_PASSWORD')
            keyAlias System.getenv('KEY_ALIAS')
            keyPassword System.getenv('KEY_PASSWORD')
        }
    }

    androidExtensions {
        experimental = true
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue("string", "hockey_app_id", "\"$hockey_app_id_debug\"")
        }

        debug {
            resValue("string", "hockey_app_id", "\"$hockey_app_id_debug\"")
        }
    }

    gradle.taskGraph.whenReady { taskGraph ->
        if (taskGraph.hasTask(assembleDebug) || taskGraph.hasTask(assembleRelease)) {
            autoIncrementBuildVersionNumber()
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${"Lady Happy"}.${variant.name}_${variant.versionName}.apk"
        }
    }

    dexOptions {
        javaMaxHeapSize "4g"
        preDexLibraries false
    }

    kapt {
        useBuildCache = false
    }
}

//apply plugin: 'com.getkeepsafe.dexcount'

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':EasyAdapter')
    implementation project(':core')
    testImplementation 'junit:junit:4.12'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.android.support:multidex:1.0.3'
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.4@aar') {
        transitive = true
    }
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:recyclerview-v7:27.1.1'
    implementation 'com.android.support:design:27.1.1'

    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    implementation 'com.google.android:flexbox:1.0.0'
    implementation 'androidx.core:core-ktx:0.3'
    implementation 'org.jetbrains.anko:anko-commons:0.10.5'
    implementation 'org.jetbrains.anko:anko-support-v4-commons:0.10.5'

    implementation 'com.google.firebase:firebase-storage:16.0.1'
    implementation 'com.google.firebase:firebase-firestore:17.0.1'
    implementation 'com.google.firebase:firebase-core:16.0.1'
    implementation 'com.google.android.gms:play-services-plus:15.0.1'

    implementation 'io.reactivex.rxjava2:rxjava:2.1.14'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'

    implementation 'com.jakewharton.timber:timber:4.7.0'

    implementation 'co.zsmb:materialdrawer-kt:1.3.4'

    implementation 'ru.terrakok.cicerone:cicerone:3.0.0'

    implementation 'com.github.bumptech.glide:glide:4.6.1'
    kapt 'com.github.bumptech.glide:compiler:4.7.1'

    debugImplementation 'net.hockeyapp.android:HockeySDK:5.1.0'

    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.2.50'
    implementation 'com.github.egorikftp:CoreLib-Kotlin:0.0.8'

    implementation 'android.arch.lifecycle:extensions:1.1.1'
    kapt 'android.arch.lifecycle:compiler:1.1.1'

    implementation 'com.google.dagger:dagger:2.16'
    kapt 'com.google.dagger:dagger-compiler:2.16'
    kapt 'com.google.dagger:dagger-android-processor:2.16'
    implementation 'com.google.dagger:dagger-android:2.16'
    implementation 'com.google.dagger:dagger-android-support:2.16'

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
}

apply plugin: 'com.google.gms.google-services'

Properties loadProperties(String path) {
    def file = file(path)
    if (file.canRead() && file.canWrite()) {
        Properties properties = new Properties()
        properties.load(new FileInputStream(file))
        return properties
    } else {
        throw new GradleException("Could not read version.properties!")
    }
}

def autoIncrementBuildVersionNumber() {
    def prop = loadProperties('version.properties')
    def newVersion = (prop['BUILD_VERSION'] as int) + 1
    prop['BUILD_VERSION'] = newVersion as String
    prop.store(file('version.properties').newWriter(), null)
}