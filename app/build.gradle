apply plugin: 'com.android.application'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'
apply from: 'keys.gradle'

def versionProp = loadProperties('version.properties')
def version = versionProp['VERSION'] as int
def sub_version = versionProp['SUB_VERSION'] as int
def build_version = versionProp['BUILD_VERSION'] as int
def verCode = version * 100000 + sub_version * 1000 + build_version
def verName = "$version.$sub_version.$build_version"

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.2"

    defaultConfig {
        applicationId "com.egoriku.ladyhappy"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode verCode
        versionName verName
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        release {
            minifyEnabled true
            ext.enableCrashlytics = true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            resValue "string", "app_name", "Lady Happy"
            resValue("string", "hockey_app_id", "\"$hockey_app_id_debug\"")
        }

        debug {
            resValue "string", "app_name", "Lady Happy Beta"
            resValue("string", "hockey_app_id", "\"$hockey_app_id_debug\"")
            ext.enableCrashlytics = false
        }
    }

    gradle.taskGraph.whenReady { taskGraph ->
        //if (taskGraph.hasTask(assembleDebug) || taskGraph.hasTask(assembleRelease)) {

        if (taskGraph.hasTask('assembleRelease')) {
            autoIncrementBuildVersionNumber()
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${"Lady Happy"}.${variant.name}_${variant.versionName}.apk"
        }
    }

    dexOptions {
        incremental true
        javaMaxHeapSize "4g"
        preDexLibraries true
    }
}

dependencies {
    implementation project(path: ':EasyAdapter')
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    testImplementation 'junit:junit:4.12'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.1', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    implementation 'com.android.support:multidex:1.0.2'

    implementation('com.crashlytics.sdk.android:crashlytics:2.7.1@aar') {
        transitive = true
    }

    implementation 'com.android.support:appcompat-v7:27.0.2'
    implementation 'com.android.support:recyclerview-v7:27.0.2'
    implementation 'com.android.support:design:27.0.2'
    implementation 'com.android.support:palette-v7:27.0.2'
    implementation 'com.android.support:cardview-v7:27.0.2'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0-beta4'

    implementation 'com.google.firebase:firebase-storage:11.8.0'
    implementation 'com.google.firebase:firebase-database:11.8.0'
    implementation 'com.google.firebase:firebase-auth:11.8.0'
    implementation 'com.google.firebase:firebase-firestore:11.8.0'
    implementation 'com.google.firebase:firebase-core:11.8.0'
    implementation 'com.google.android.gms:play-services-plus:11.8.0'

    implementation 'io.reactivex.rxjava2:rxjava:2.1.6'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'

    implementation 'com.airbnb.android:lottie:2.5.0-beta1'
    implementation 'com.jakewharton.timber:timber:4.6.0'
    implementation 'co.zsmb:materialdrawer-kt:1.2.2'
    implementation 'ru.terrakok.cicerone:cicerone:2.1.0'
    implementation 'com.github.bumptech.glide:glide:4.3.1'
    implementation 'net.hockeyapp.android:HockeySDK:4.1.4'

    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jre7:1.2.10'
    implementation 'org.jetbrains.anko:anko-appcompat-v7:0.10.4'
    implementation 'org.jetbrains.anko:anko-appcompat-v7-coroutines:0.10.4'
    implementation 'org.jetbrains.anko:anko-support-v4-commons:0.10.4'
    implementation 'org.jetbrains.anko:anko-sdk25:0.10.4'
    implementation 'org.jetbrains.anko:anko-sdk25-coroutines:0.10.4'
    implementation 'org.jetbrains.anko:anko-constraint-layout:0.10.4'

    implementation 'com.github.egorikftp:CoreLib-Kotlin:0.0.7'

    implementation 'android.arch.lifecycle:extensions:1.0.0'
    kapt 'android.arch.lifecycle:compiler:1.0.0'

    implementation 'com.google.dagger:dagger:2.14.1'
    kapt 'com.google.dagger:dagger-compiler:2.14.1'
    implementation 'com.google.dagger:dagger-android:2.14.1'
    kapt 'com.google.dagger:dagger-android-processor:2.11'
    implementation 'com.google.dagger:dagger-android-support:2.14.1'
}

apply plugin: 'com.google.gms.google-services'

Properties loadProperties(String path) {
    def file = file(path)
    if (file.canRead() && file.canWrite()) {
        Properties properties = new Properties()
        properties.load(new FileInputStream(file))
        return properties
    } else {
        throw new GradleException("Could not read version.properties!")
    }
}

def autoIncrementBuildVersionNumber() {
    def prop = loadProperties('version.properties')
    def newVersion = (prop['BUILD_VERSION'] as int) + 1
    prop['BUILD_VERSION'] = newVersion as String
    prop.store(file('version.properties').newWriter(), null)
}
